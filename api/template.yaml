AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  api

  Sample SAM Template for api
Parameters:
  clientId:
    Type: String
    Default: id
  clientSecret:
    Type: String
    Default: secret
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Tracing: Active
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
      AllowCredentials: "'*'"

Resources:
  # HelloCrudAPI:
  #   Type: AWS::Serverless::Api
  #   Description: "Serverless API for CRUD operations"
  #   Properties:
  #     Name: "api-hello-crud"
  #     StageName: "Prod"
  #     Cors:
  #       AllowMethods: "'POST,GET,PUT,DELETE,OPTIONS'"
  #       AllowOrigin: "'*'"
  #       AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
  AuthFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: auth/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          client_id: !Ref clientId
          client_secret: !Ref clientSecret
      Architectures:
      - x86_64
      Events:
        Auth:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            # RestApiId: !Ref HelloCrudAPI
            Path: /auth
            Method: post
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts
  LoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: login/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          client_id: !Ref clientId
          client_secret: !Ref clientSecret
      Architectures:
      - x86_64
      Events:
        Auth:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            # RestApiId: !Ref HelloCrudAPI
            Path: /login
            Method: post
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts
  SpotifyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: spotify-api/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          client_id: !Ref clientId
          client_secret: !Ref clientSecret
      Architectures:
      - x86_64
      Events:
        Auth:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            # RestApiId: !Ref HelloCrudAPI
            Path: /spotify
            Method: post
            RequestParameters:
              method.request.header.Authorization: true
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts
  PlaylistFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: playlist-api/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          client_id: !Ref clientId
          client_secret: !Ref clientSecret
      Architectures:
      - x86_64
      Events:
        Auth:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            # RestApiId: !Ref HelloCrudAPI
            Path: /playlist-api
            Method: post
            RequestParameters:
              method.request.header.Authorization: true
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  AuthApi:
    Description: API Gateway endpoint URL for Prod stage for Auth function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/"
  AuthFunction:
    Description: Auth Lambda Function ARN
    Value: !GetAtt AuthFunction.Arn
  AuthFunctionIamRole:
    Description: Implicit IAM Role created for Auth function
    Value: !GetAtt AuthFunctionRole.Arn
  LoginApi:
    Description: API Gateway endpoint URL for Prod stage for Login function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login/"
  LoginFunction:
    Description: Login Lambda Function ARN
    Value: !GetAtt LoginFunction.Arn
  LoginFunctionIamRole:
    Description: Implicit IAM Role created for Login function
    Value: !GetAtt LoginFunction.Arn
  SpotifyApi:
    Description: API Gateway endpoint URL for Prod stage for Spotify function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/spotify/"
  SpotifyFunction:
    Description: Spotify Lambda Function ARN
    Value: !GetAtt SpotifyFunction.Arn
  SpotifyFunctionIamRole:
    Description: Implicit IAM Role created for Spotify function
    Value: !GetAtt SpotifyFunction.Arn
  PlaylistApi:
    Description: API Gateway endpoint URL for Prod stage for Playlist function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/playlist/"
  PlaylistFunction:
    Description: Playlist Lambda Function ARN
    Value: !GetAtt PlaylistFunction.Arn
  PlaylistFunctionIamRole:
    Description: Implicit IAM Role created for Playlist function
    Value: !GetAtt PlaylistFunction.Arn
